/**
 * Date/Time objects as defined in API document.
 */
DateTime = Object {
}
AbsoluteDateTime = Object extends DateTime {
}
PeriodicDateTime = Object extends DateTime {
}

/** 
 * Represents a user identity.
 */
UserIdentity = Object {
}

/** 
 * Holds the specifications of requested resources.
 */
RequestedResources = Object {
  // List of resource specifications.
  resources: List of Object {
    // Resource specification
    specification: (
      /** Fully-qualified explicit specification. */
      Object {
        // Specific resource.
        resource: Resource,
      } 
      /** Partially-qualified explicit specification. */
      or Object {
        // Technology of a resource.
        technology: * or Technology,
        // Type of a resource.
        type: Enum {Terminal, Multipoint}
      }
    ),
    // List of identities that will/are allowed to connect 
    // to a videoconference from that resource.
    identities: List<1:n> of UserIdentity 
  },
  // Option specifying whether inter domain lookup can be performed.
  interDomain: Boolean
}

/**
 * Represents a time slot in a schedule defined by a start 
 * date/time and and a duration.
 */
TimeSlot = Object {
  // Absolute date/time when the event takes place.
  dateTime: AbsoluteDateTime,

  // Duration which the event takes.
  duration: Duration
}

/**
 * Represents an allocated resource.
 */
AllocatedResource = Object {
  // Resource that is allocated.
  resource: Resource,
  // Time slot for which the resource is allocated.
  timeSlot: TimeSlot,
  // List of identities that are allowed for the resource and time slot.
  identities: List<1:n> of UserIdentity,
  // List of aliases that are assigned to resource in a time slot.
  aliases: List<1:n> of (IdentifierResource or String)
}

/**
 * Event represents the reservation on specific date/time. If reservation
 * takes place multiple date/times it is scheduled multiple times
 * and the scheduling result (assigned resources) can be different. This
 * object holds the allocated resources. 
 */
ReservationEvent = Object {
  // Time slot in which the reservation event takes place.
  timeSlot: TimeSlot,

  // Requested resources for the reservation.
  requestedResources: RequestedResources,

  // Allocated resources for the reservation event. 
  allocatedResources: List<1:n> of AllocatedResource
}

/** 
 * Single reservation that was requested by an user. It can
 * contain multiple reservation events when periodic date is used.
 */
Reservation = Object {
  // Simple or periodic date.
  dateTime: DateTime,

  // Requested resources for the reservation.
  requestedResources: ReservationRequestedResources,

  // Enumerated list of reservation events.
  events: List<1:n> of ReservationEvent
}



