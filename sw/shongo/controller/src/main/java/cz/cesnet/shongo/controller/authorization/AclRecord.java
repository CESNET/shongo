package cz.cesnet.shongo.controller.authorization;

import cz.cesnet.shongo.controller.Role;
import cz.cesnet.shongo.controller.common.EntityIdentifier;

/**
 * Represents an single ACL record that an user has a role for an entity.
 *
 * @author Martin Srom <martin.srom@cesnet.cz>
 */
public class AclRecord
{
    /**
     * Used for generating debug identifiers.
     */
    private static long debugId = 0;

    /**
     * Identifier of the ACL.
     */
    private final String id;

    /**
     * User-id of the ACL.
     */
    private final String userId;

    /**
     * {@link EntityIdentifier} of the ACL.
     */
    private final EntityIdentifier entityId;

    /**
     * {@link Role} of the ACL.
     */
    private final Role role;

    /**
     * Constructor in which the {@link #id} is automatically generated by the {@link #debugId}.
     *
     * @param userId   sets the {@link #id}
     * @param entityId sets the {@link #entityId}
     * @param role     sets the {@link #role}
     */
    public AclRecord(String userId, EntityIdentifier entityId, Role role)
    {
        this(String.valueOf(++debugId), userId, entityId, role);
    }

    /**
     * Constructor.
     *
     * @param id       sets the {@link #id}
     * @param userId   sets the {@link #userId}
     * @param entityId sets the {@link #entityId}
     * @param role     sets the {@link #role}
     */
    public AclRecord(String id, String userId, EntityIdentifier entityId, Role role)
    {
        this.id = id;
        this.userId = userId;
        this.entityId = entityId;
        this.role = role;
    }

    /**
     * @return {@link #id}
     */
    public String getId()
    {
        return id;
    }

    /**
     * @return {@link #userId}
     */
    public String getUserId()
    {
        return userId;
    }

    /**
     * @return {@link #entityId}
     */
    public EntityIdentifier getEntityId()
    {
        return entityId;
    }

    /**
     * @return {@link #role}
     */
    public Role getRole()
    {
        return role;
    }

    /**
     * @return {@link AclRecord} converted to {@link cz.cesnet.shongo.controller.api.AclRecord}
     */
    public cz.cesnet.shongo.controller.api.AclRecord toApi()
    {
        cz.cesnet.shongo.controller.api.AclRecord aclRecordApi = new cz.cesnet.shongo.controller.api.AclRecord();
        aclRecordApi.setId(getId());
        aclRecordApi.setUserId(getUserId());
        aclRecordApi.setEntityId(getEntityId().toId());
        aclRecordApi.setRole(getRole());
        return aclRecordApi;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        AclRecord record = (AclRecord) o;

        if (entityId != null ? !entityId.equals(record.entityId) : record.entityId != null) {
            return false;
        }
        if (role != record.role) {
            return false;
        }
        if (userId != null ? !userId.equals(record.userId) : record.userId != null) {
            return false;
        }

        return true;
    }

    @Override
    public int hashCode()
    {
        int result = userId != null ? userId.hashCode() : 0;
        result = 31 * result + (entityId != null ? entityId.hashCode() : 0);
        result = 31 * result + (role != null ? role.hashCode() : 0);
        return result;
    }
}
