<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cz.cesnet.shongo</groupId>
        <artifactId>shongo</artifactId>
        <version>1.0</version>
    </parent>

    <artifactId>controller</artifactId>
    <name>Shongo Controller</name>
    <description>Domain controller implementation for Shongo resource management system.</description>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>cz.cesnet.shongo</groupId>
            <artifactId>common</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>cz.cesnet.shongo</groupId>
            <artifactId>controller-api</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- Spring framework core is used for AnnotationUtils class -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>3.1.1.RELEASE</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Hibernate is used for accessing database -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>4.1.1.Final</version>
        </dependency>

        <!-- HyperSQL is used as embedded database -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.2.8</version>
        </dependency>

        <!-- Apache XML-RPC is used as implementation of remote procedure calls -->
        <dependency>
            <groupId>org.apache.xmlrpc</groupId>
            <artifactId>xmlrpc-server</artifactId>
            <version>3.1.3</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Apache Commons Configuration is used for loading/storing configuration -->
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
            <version>1.8</version>
        </dependency>

        <!-- HttpClient is used for communication to authorization server -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.2.1</version>
        </dependency>

        <!-- Jackson (High-performance JSON processor) is used for parsing responses from authorization server -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-lgpl</artifactId>
            <version>1.9.9</version>
        </dependency>

        <!-- Graph-theory objects and algorithms -->
        <dependency>
            <groupId>jgrapht</groupId>
            <artifactId>jgrapht</artifactId>
            <version>0.7.3</version>
        </dependency>

        <!-- Visualisation of graphs -->
        <dependency>
            <groupId>jgraph</groupId>
            <artifactId>jgraph</artifactId>
            <version>5.13.0.0</version>
        </dependency>

    </dependencies>

    <build>
        <!-- Process all files in src/test/resources and replaces all maven variables ${MAVEN_VARIABLE}.
             A variable is used in src/test/resources/persistence.xml -->
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <!-- Generates proper manifest file with right classpath and main class -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>cz.cesnet.shongo.controller.Controller</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
</project>