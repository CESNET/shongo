* Implement standalone reservation of alias from AliasProvider with "restrictedToOwnerResource = true"
  (which then can be used as provided reservation)

* Adobe connect
  - create/delete room by alias reservation

* Implement better web client "back button"

* Alias specification - request H323 and SIP too

* H.323 room endtime

* Refactorize web client to mod_perl

* Web clients - H.323 and Adobe Connect
  - runtime management (room, participants)

* Soft delete of reservation requests

* Permanent reservation
  - forced maintenance option
  - permanent reservation should try to reallocate all colliding reservations

* Make Cache thread safe (Scheduler and ResourceServiceImpl can cause reset() which reloads cache, and while
  the cache is reloading no one can use it)

* Create expiring user cache in the controller

* Implement allocation failed state to permanent reservations

FUTURE:
-------
* Test cmd-line client in mvn test (Run cmd-line client test in maven testing)

* Use database migration (change database to some which allows for transaction ddl, e.g., postgresql)
  - Implement multiple dialects

* Create tests for Converter (and simplify Converter.convert() method)

* Persons, PersonSpecifications

* Add requested alias value attribute to AliasSpecification

* API synchronizovat pomoci
  http://java.net/projects/texdoclet/
  https://github.com/ePaul/ltxdoclet
  http://docs.oracle.com/javase/1.5.0/docs/tooldocs/windows/javadoc.html#doclet
  http://stackoverflow.com/questions/5869566/latex-javadoc-generation