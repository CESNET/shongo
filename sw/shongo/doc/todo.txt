* 2 paragraphs of shongo features

* Fix the freezing of Connectors (sometimes after few requests the connector is in "Active" state and doesn't respond)

* String aliases
  - all labels should be room name (and not identifier)
  -create SpecificationSummary and add it to ReservationRequestSummary
  -add room name to list page in web client

* Improve value generation performance

* Web client
  -catch and format errors (e.g., request cannot be modifed or deleted)
  -use one getReservations instead of multiple getReservation requests
  -implement better "back button"

* Improve allocation failed reports
  -Max-future

* Executor
  -Store starting failed reports
  -Try to start executables in starting failed state (e.g., when agent was offline) or send info emails
   to administrators

* Update API                                   -
  -reservation - reservationRequestId, name
  -controller configuratio
  -ValueProvider, AliasProvider
  -RoomProviderCapability->requiredAliasTypes
  -AliasType.ROOM_NAME
  -remove RoomSpecification.withAlias

* check H.323 prefix for shongo (01 doesn't work, "shongo-test" has it assigned)

* Adobe Connector
 - single connection
 - thread safety

* Connector
 - test reconnecting of connectors when a device is restarted

* Clien-CLI Shell.pm in parse_attributes the resulting hash should be processed and all json
  bool objects should be converted to 1/0

* Use HangUp instead of HangUpAll

* Alias specification - request H323 and SIP too

* H.323 room endtime

* Refactorize web client to mod_perl

* Web clients - H.323 and Adobe Connect
  - runtime management (room, participants)

* Soft delete of reservation requests

* Permanent reservation
  - forced maintenance option
  - permanent reservation should try to reallocate all colliding reservations

* Make Cache thread safe (Scheduler and ResourceServiceImpl can cause reset() which reloads cache, and while
  the cache is reloading no one can use it)

* Create expiring user cache in the controller

* Implement allocation failed state to permanent reservations

* Refactorize Room.Options

* Add deviceResource attribute to Alias and fill it when the alias is evaluated on the DeviceResource and check
  assignment of this alias to proper DeviceResource

FUTURE:
-------
* Controller should check RoomProvider devices if theirs configured capacity doesn't exceed the real one and
  warning should be displayed if so (we don't have to force error message)

* Test cmd-line client in mvn test (Run cmd-line client test in maven testing)

* Use database migration (change database to some which allows for transaction ddl, e.g., postgresql)
  - Implement multiple dialects

* Create tests for Converter (and simplify Converter.convert() method)

* Persons, PersonSpecifications

* Add requested alias value attribute to AliasSpecification

* API synchronizovat pomoci
  http://java.net/projects/texdoclet/
  https://github.com/ePaul/ltxdoclet
  http://docs.oracle.com/javase/1.5.0/docs/tooldocs/windows/javadoc.html#doclet
  http://stackoverflow.com/questions/5869566/latex-javadoc-generation