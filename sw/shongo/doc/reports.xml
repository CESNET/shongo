<?xml version="1.0" encoding="UTF-8" ?>

<reports xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="reports.xsd">

    <scopes>
        <scope>
            <name>jade</name>
            <module>common-api</module>
            <class-name>cz.cesnet.shongo.JadeReportSet</class-name>
        </scope>

        <scope>
            <name>common</name>
            <module>common-api</module>
            <class-name>cz.cesnet.shongo.CommonReportSet</class-name>
        </scope>

        <scope>
            <name>controller</name>
            <module>controller-api</module>
            <class-name>cz.cesnet.shongo.controller.ControllerReportSet</class-name>
        </scope>

        <!--<scope>
            <name>scheduler</name>
            <module>controller</module>
            <class-name>cz.cesnet.shongo.controller.SchedulerReportSet</class-name>
        </scope>

        <scope>
            <name>executor</name>
            <module>controller</module>
            <class-name>cz.cesnet.shongo.controller.ExecutorReportSet</class-name>
        </scope>-->
    </scopes>

    <!--
        <report abstract="true|false" extends="true|false">
            <persistent></persistent>
            <rpc-api></rpc-api>
            <jade-api></jade-api>
            <id>string</id>
        </report>
    -->

    <scope name="jade">

        <report>
            <id>unknown-error</id>
            <classification severity="error"/>
            <params>
                <param name="description" type="string"/>
            </params>
            <description>
                Unknown error: ${description}
            </description>
            <example>
                TODO:
            </example>
        </report>

        <report>
            <id>agent-not-found</id>
            <classification severity="error"/>
            <params>
                <param name="receiver-agent" type="string"/>
            </params>
            <description>
                Receiver agent ${receiver-agent} is not available now.
            </description>
            <example>
                TODO:
            </example>
        </report>

        <report>
            <id>agent-not-started</id>
            <classification severity="error"/>
            <params>
                <param name="sender-agent" type="string"/>
            </params>
            <description>
                Server agent ${sender-agent} is not started yet.
            </description>
            <example>
                TODO:
            </example>
        </report>

        <report>
            <id>command-timeout</id>
            <classification severity="error"/>
            <params>
                <param name="receiver-agent" type="string"/>
                <param name="command" type="string"/>
            </params>
            <description>
                Command ${command} has timeout.
            </description>
            <example>
                TODO:
            </example>
        </report>

        <report>
            <id>command-not-supported</id>
            <classification severity="error"/>
            <params>
                <param name="receiver-agent" type="string"/>
                <param name="command" type="string"/>
            </params>
            <description>
                Receiver agent ${receiver-agent} doesn't implement command ${command}.
            </description>
            <example>
                TODO:
            </example>
        </report>

        <report>
            <id>command-refused</id>
            <classification severity="error"/>
            <params>
                <param name="receiver-agent" type="string"/>
                <param name="command" type="string"/>
            </params>
            <description>
                Receiver agent ${receiver-agent} has refused command ${command}.
            </description>
            <example>
                TODO:
            </example>
        </report>

        <report>
            <id>command-not-understood</id>
            <classification severity="error"/>
            <params>
                <param name="receiver-agent" type="string"/>
                <param name="command" type="string"/>
            </params>
            <description>
                Receiver agent ${receiver-agent} didn't understand command ${command}.
            </description>
            <example>
                TODO:
            </example>
        </report>

        <report>
            <id>command-failed</id>
            <classification severity="error"/>
            <params>
                <param name="receiver-agent" type="string"/>
                <param name="command" type="string"/>
                <param name="reason" type="string"/>
            </params>
            <description>
                Receiver agent ${receiver-agent} throws CommandException while processing command ${command}: ${reason}
            </description>
            <example>
                TODO:
            </example>
        </report>

        <report>
            <id>command-result-decoding-failed</id>
            <classification severity="error"/>
            <params>
                <param name="sender-agent" type="string"/>
                <param name="command" type="string"/>
            </params>
            <description>
                Sender agent ${sender-agent} cannot decode response from command ${command}.
            </description>
            <example>
                TODO:
            </example>
        </report>

    </scope>

    <scope name="common">

        <report>
            <id>unknown-error</id>
            <classification severity="error"/>
            <params>
                <param name="description" type="string"/>
            </params>
            <description>
                Unknown error: ${description}
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>type-illegal-value</id>
            <classification severity="error"/>
            <params>
                <param name="type" type="string"/>
                <param name="value" type="string"/>
            </params>
            <description>
                Value ${value} is illegal for type ${type}.
            </description>
            <example>
                TODO:
                -Enum
                -Date/Time
                -Period
                -Interval
                -Partial Date/Time
                -DeviceResource.Mode
            </example>
            <user visible="false" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>class-undefined</id>
            <classification severity="error"/>
            <params>
                <param name="class" type="string"/>
            </params>
            <description>
                Class ${class} is not defined.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>class-instantiation-error</id>
            <classification severity="error"/>
            <params>
                <param name="class" type="string"/>
            </params>
            <description>
                Class ${class} cannot be instanced.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>class-attribute-undefined</id>
            <classification severity="error"/>
            <params>
                <param name="class" type="string"/>
                <param name="attribute" type="string"/>
            </params>
            <description>
                Attribute ${attribute} is not defined in class ${class}.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>class-attribute-type-mismatch</id>
            <classification severity="error"/>
            <params>
                <param name="class" type="string"/>
                <param name="attribute" type="string"/>
                <param name="required-type" type="string"/>
                <param name="present-type" type="string"/>
            </params>
            <description>
                Type mismatch of value in attribute ${attribute} in class ${class}.
                Present type ${given-type} doesn't match required type ${required-type}.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>class-attribute-required</id>
            <classification severity="error"/>
            <params>
                <param name="class" type="string"/>
                <param name="attribute" type="string"/>
            </params>
            <description>
                Attribute ${attribute} in class ${class} wasn't present but it is required.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>class-attribute-readonly</id>
            <classification severity="error"/>
            <params>
                <param name="class" type="string"/>
                <param name="attribute" type="string"/>
            </params>
            <description>
                Value for attribute ${attribute} in class ${class} was present but the attribute is read-only.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>class-collection-required</id>
            <classification severity="error"/>
            <params>
                <param name="class" type="string"/>
                <param name="collection" type="string"/>
            </params>
            <description>
                Collection ${collection} in class ${class} wasn't present or was empty but it is required.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>collection-item-null</id>
            <classification severity="error"/>
            <params>
                <param name="collection" type="string"/>
            </params>
            <description>
                Null item cannot be present in collection ${collection}.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>collection-item-type-mismatch</id>
            <classification severity="error"/>
            <params>
                <param name="collection" type="string"/>
                <param name="required-type" type="string"/>
                <param name="present-type" type="string"/>
            </params>
            <description>
                Collection ${collection} contains item of type ${present-type} which dosn't match the
                required type ${required-type}.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>entity-not-found</id>
            <classification severity="error"/>
            <params>
                <param name="entity" type="string"/>
                <param name="id" type="string"/>
            </params>
            <description>
                Entity ${entity} with identifier ${id} was not found.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>entity-invalid</id>
            <classification severity="error"/>
            <params>
                <param name="entity" type="string"/>
                <param name="reason" type="string"/>
            </params>
            <description>
                Entity ${entity} validation failed: ${reason}
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>entity-not-deletable-referenced</id>
            <classification severity="error"/>
            <params>
                <param name="entity" type="string"/>
                <param name="id" type="string"/>
            </params>
            <description>
                Entity ${entity} with identifier ${id} cannot be deleted because it is still referenced.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

    </scope>

    <scope name="controller">

        <report>
            <id>acl-invalid-role</id>
            <classification severity="error"/>
            <params>
                <param name="entity" type="string"/>
                <param name="role" type="string"/>
            </params>
            <description>
                ACL Role ${role} is invalid for entity ${entity}.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>security-invalid-token</id>
            <classification severity="error"/>
            <params>
                <param name="token" type="string"/>
            </params>
            <description>
                Invalid security token ${token}.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>security-not-authorized</id>
            <classification severity="error"/>
            <params>
                <param name="action" type="string"/>
            </params>
            <description>
                You are not authorized to ${action}.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>device-command-failed</id>
            <classification severity="error"/>
            <params>
                <param name="device" type="string"/>
                <param name="command" type="string"/>
                <param name="error" type="jade-report"/>
            </params>
            <description>
                Command ${command} for device ${device} failed: ${error}
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>identifier-invalid</id>
            <classification severity="error"/>
            <params>
                <param name="id" type="string"/>
            </params>
            <description>
                Identifier ${id} is invalid.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>identifier-invalid-domain</id>
            <classification severity="error"/>
            <params>
                <param name="id" type="string"/>
                <param name="required-domain" type="string"/>
            </params>
            <description>
                Identifier ${id} doesn't belong to domain ${required-domain}.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>identifier-invalid-type</id>
            <classification severity="error"/>
            <params>
                <param name="id" type="string"/>
                <param name="required-type" type="string"/>
            </params>
            <description>
                Identifier ${id} isn't of required type ${required-type}.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>reservation-request-not-modifiable</id>
            <classification severity="error"/>
            <params>
                <param name="id" type="string"/>
            </params>
            <description>
                Reservation request with identifier ${id} cannot be modified or deleted.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

        <report>
            <id>reservation-request-empty-duration</id>
            <classification severity="error"/>
            <description>
                Reservation request time slot must not be empty.
            </description>
            <example>
                TODO:
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

    </scope>

    <!--<scope name="scheduler">

        <report abstract="true">
            <id>scheduler</id>
            <classification severity="error"/>
        </report>

        <report extends="scheduler">
            <id>unknown-error</id>
            <classification severity="error"/>
            <description>

            </description>
            <example>
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
        </report>

    </scope>

    <scope name="executor">

        <report>
            <id>command-failed</id>
            <classification severity="error"/>
            <params>
                <param name="command" type="string"/>
                <param name="error" type="jade-report"/>
            </params>
            <description>
                Command ${command} failed: ${error}
            </description>
            <example>
            </example>
            <user visible="true" via="ui">
                <description>TODO:</description>
            </user>
            <domain-admin visible="false"/>
            <device-admin visible="false"/>
            <resolution>fail</resolution>
        </report>

    </scope>-->

</reports>